@page "/call-api"
@using System.Text.Json
@inject IHttpClientFactory HttpClientFactory

<h3>CallApi</h3>

<button @onclick="CallApiForecastAsync">CallAPI Forecast</button>
<pre>@JsonForecast</pre>

<button @onclick="CallApiClaimUserInfoAsync">CallAPI Claim User info</button>
<pre>@JsonClaimUserInfo</pre>

<button @onclick="CallApiClaimUserInfoAsync">CallAPI Claim Admin info</button>
<pre>@JsonClaimAdminInfo</pre>

<button @onclick="CallApiClaimUserInfoAsync">CallAPI Claim Super Admin info</button>
<pre>@JsonClaimSuperAdminInfo</pre>

@code {
    private string JsonForecast = string.Empty;
    private string JsonClaimUserInfo = string.Empty;
    private string JsonClaimAdminInfo = string.Empty;
    private string JsonClaimSuperAdminInfo = string.Empty;

    private async Task CallApiForecastAsync()
    {
        CallApiEndpoint("https://localhost:7088/weatherforecast", out JsonClaimSuperAdminInfo);
    }
    
    private async Task CallApiClaimUserInfoAsync()
    { 
        CallApiEndpoint("https://localhost:7088/claim-user-info", out JsonClaimUserInfo);
    }
    
    private async Task CallApiClaimAdminInfoAsync()
    { 
        CallApiEndpoint("https://localhost:7088/claim-admin-info", out JsonClaimAdminInfo);
    }
    
    private async Task CallApiClaimSuperAdminInfoAsync()
    { 
        CallApiEndpoint("https://localhost:7088/claim-super-admin-info", out JsonClaimSuperAdminInfo);
    }

    private void CallApiEndpoint(string url, out string result)
    {
        try
        {
            var client = HttpClientFactory.CreateClient("api-test-client.authorized");
            var content = client.GetStringAsync(url).Result;
        
            var parse = JsonDocument.Parse(content);
            var formatter = JsonSerializer.Serialize(parse, new JsonSerializerOptions{ WriteIndented = true });
        
            result = formatter;
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            result = $"some error, look in console- {e.Message}";
        }
    }
}