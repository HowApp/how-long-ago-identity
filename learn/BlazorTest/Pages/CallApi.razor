@page "/call-api"
@using System.Text.Json
@inject IHttpClientFactory HttpClientFactory

<h3>CallApi</h3>

<button @onclick="CallApiForecastAsync">CallAPI Basic info</button>
<pre>@JsonBasic</pre>

<button @onclick="CallApiClaimUserInfoAsync">CallAPI Claim User info</button>
<pre>@JsonClaimUserInfo</pre>

<button @onclick="CallApiClaimAdminInfoAsync">CallAPI Claim Admin info</button>
<pre>@JsonClaimAdminInfo</pre>

<button @onclick="CallApiClaimSuperAdminInfoAsync">CallAPI Claim Super Admin info</button>
<pre>@JsonClaimSuperAdminInfo</pre>

@code {
    private string JsonBasic = string.Empty;
    private string JsonClaimUserInfo = string.Empty;
    private string JsonClaimAdminInfo = string.Empty;
    private string JsonClaimSuperAdminInfo = string.Empty;

    private async Task CallApiForecastAsync()
    {
        JsonBasic = await CallApiEndpoint("https://localhost:7088/basic");
    }
    
    private async Task CallApiClaimUserInfoAsync()
    { 
        JsonClaimUserInfo = await CallApiEndpoint("https://localhost:7088/claim-user-info");
    }
    
    private async Task CallApiClaimAdminInfoAsync()
    { 
        JsonClaimAdminInfo = await CallApiEndpoint("https://localhost:7088/claim-admin-info");
    }
    
    private async Task CallApiClaimSuperAdminInfoAsync()
    { 
        JsonClaimSuperAdminInfo = await CallApiEndpoint("https://localhost:7088/claim-super-admin-info");
    }

    private async Task<string> CallApiEndpoint(string url)
    {
        try
        {
            var client = HttpClientFactory.CreateClient("api-test-client.authorized");
            var content = await client.GetStringAsync(url);
        
            var parse = JsonDocument.Parse(content);
            var formatter = JsonSerializer.Serialize(parse, new JsonSerializerOptions{ WriteIndented = true });
        
            return formatter;
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            return $"some error, look in console- {e.Message}";
        }
    }
}