@page "/call-api"
@using System.Text.Json
@inject IHttpClientFactory HttpClientFactory

<h3>CallApi</h3>

<button @onclick="CallApiForecastAsync">CallAPI Forecast</button>
<pre>@JsonForecast</pre>

<button @onclick="CallApiClaimInfoAsync">CallAPI Claim info</button>
<pre>@JsonClaimInfo</pre>

@code {
    private string JsonForecast = string.Empty;
    private string JsonClaimInfo = string.Empty;

    private async Task CallApiForecastAsync()
    {
        try
        {
            var client = HttpClientFactory.CreateClient("api-test-client.authorized");
            var content = await client.GetStringAsync("https://localhost:7088/weatherforecast");
        
            var parse = JsonDocument.Parse(content);
            var formatter = JsonSerializer.Serialize(parse, new JsonSerializerOptions{ WriteIndented = true });
        
            JsonForecast = formatter;
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            JsonForecast = $"some error, look in console- {e.Message}";
        }
    }
    
    private async Task CallApiClaimInfoAsync()
    {
        try
        {
            var client = HttpClientFactory.CreateClient("api-test-client.authorized");
            var content = await client.GetStringAsync("https://localhost:7088/claim-info");
        
            var parse = JsonDocument.Parse(content);
            var formatter = JsonSerializer.Serialize(parse, new JsonSerializerOptions{ WriteIndented = true });
        
            JsonClaimInfo = formatter;
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            JsonClaimInfo = $"some error, look in console- {e.Message}";
        }
    }
}